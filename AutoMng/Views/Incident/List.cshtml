
<div class="span12 widget-container-span">
    <div class="widget-box  ">
        <div class="widget-header">
            <h6 class="lighter smaller">
                @AVAResource.Resource.IncidentList
            </h6>
        </div>
        <div class="widget-body">
            <table id="incidenttable" width="100%" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>
                         
                        </th>
                        <th>@AVAResource.Resource.Mobil_Plaque</th>
                        <th>@AVAResource.Resource.IncidentDriver</th>
                        <th>@AVAResource.Resource.IncidentDate</th>
                        <th>@AVAResource.Resource.IncidentDescription</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>
<script>
    var oTable1;
    $('#incidenttable tbody tr td img').click(function () {
        var nTr = this.parentNode.parentNode;
        if (this.src.match('details_close')) {
            /* This row is already open - close it */
            this.src = "/Content/images/details_open.png";
            oTable1.fnClose(nTr);
        }
        else {
            /* Open this row */
            this.src = "/Content/images/details_close.png";
            var incidentid = $(this).attr("rel");
            $.get("IncidentRepairs?incidentid=" + incidentid, function (repairs) {
                oTable1.fnOpen(nTr, repairs, 'details');
            });
        }
    });
    $(function () {
        oTable1 = $('#incidenttable').dataTable({
            "bFilter": false,
            "language": {
                "lengthMenu": "نمایش _MENU_ سطر در صفحه",
                "zeroRecords": "رکوردی وجود ندارد - متاسفانه",
                "info": "نمایش صفحه _PAGE_ از _PAGES_",
                "infoEmpty": "رکوردی وجود ندارد",
                "infoFiltered": "(فیلتر شده از _MAX_ رکورد )"
            },
            "bServerSide": true,
            "sAjaxSource": "/Incident/GetIncidents",
            "bProcessing": false,
            "aoColumns": [
                  { "bSortable": false },
                   null, null, null, null,
                   { "bSortable": false }
            ],
            "fnCreatedRow": function (nRow, aData, iDataIndex) {
              //  if (aData[6] == "true")
                $('td:eq(0)', nRow).html('<div class=""><a class="blue" id="' + aData[0] + '"  onclick="onrepairs(this)"   href="#"><i id="select"  class="fa fa-plus bigger-130"></i></a></div>').addClass('center td-actions');
                    $('td:eq(5)', nRow).html('<div class="hidden-phone visible-desktop action-buttons"><a class="blue" id="' + aData[0] + '"  onclick="onedit(this)"   href="#"><i class="fa fa-edit bigger-130"></i></a><a class="green" id="' + aData[0] + '" onclick="addincidentrepair(this)" href="#"><i class="icon-wrench bigger-130"></i></a><a class="red" id="' + aData[0] + '" onclick="ondelete(this)" href="#"><i class="fa fa-trash bigger-130"></i></a></div>').addClass('td-actions');
            },
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "automobile", "value": $("#automobile").val() });
                aoData.push({ "name": "driver", "value": $("#driver").val() });
                aoData.push({ "name": "fromPersianIncidentDate", "value": $("#fromPersianIncidentDate").val() });
                aoData.push({ "name": "toPersianIncidentDate", "value": $("#toPersianIncidentDate").val() });
            },
        });
        //$('table th input:checkbox').on('click', function () {
        //    var that = this;
        //    $(this).closest('table').find('tr > td:first-child input:checkbox')
        //    .each(function () {
        //        this.checked = that.checked;
        //        $(this).closest('tr').toggleClass('selected');
        //    });
        //});
    });
    function onedit(element) {
        var id = $(element).attr('id');
        Sppiner();
        var url = "@Url.Action("Edit", "Incident")";
        var containerholder = $("#content");
        $.ajax({
            cache: false,
            type: "GET",
            url: url,
            data: { "id": id },
            success: function (data) {
                containerholder.html('');
                containerholder.html(data);
                spinner.stop();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Error: ' + xhr.statusText);
                spinner.stop();
            }
        });
    };

    function ondelete(element) {
        var id = $(element).attr('id');
        Sppiner();
        var url = "@Url.Action("Delete", "Incident")";
        var containerholder = $("#content");
        $.ajax({
            cache: false,
            type: "GET",
            url: url,
            data: { "id": id },
            success: function (data) {
                containerholder.html('');
                containerholder.html(data);
                spinner.stop();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Error: ' + xhr.statusText);
                spinner.stop();
            }
        });
    };

    function onrepairs(element) {
        var nTr = element.parentNode.parentNode.parentNode;
        //var select = $("#select").attr('class');
        var select = element.firstElementChild;
        if ($(select).attr('class').match('plus')) {
            $(select).removeClass('fa-plus');
            $(select).addClass('fa-minus');
            var incidentid = $(element).attr("id");
            $.get("IncidentRepairs?incidentid=" + incidentid, function (repairs) {
                oTable1.fnOpen(nTr, repairs, 'details_' + incidentid);
            });
        }
        else {
            $(select).removeClass('fa-minus');
            $(select).addClass('fa-plus');
            oTable1.fnClose(nTr);
        }
    
    };

    function addincidentrepair(element) {
        var nTr = element.parentNode.parentNode.parentNode;
        var id = $(element).attr('id');
        Sppiner();
        var url = "@Url.Action("NewIncidentRepair", "Repair")";
        var containerholder = $("#content");
        $.ajax({
            cache: false,
            type: "GET",
            url: url,
            data: { "id": id },
            success: function (data) {
                containerholder.html('');
                containerholder.html(data);
               
                spinner.stop();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Error: ' + xhr.statusText);
                spinner.stop();
            }
        });
    };
</script>