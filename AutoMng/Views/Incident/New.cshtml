@model AutomobilMng.Models.IncidentModel
@{
    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    options.OnBegin = "OnBegin";
    options.OnComplete = "OnComplete";
    options.OnFailure = "OnFailure";
    options.OnSuccess = "OnSuccess";
    options.LoadingElementId = "2";
    options.LoadingElementDuration = 1000;
    options.UpdateTargetId = "d";
    options.InsertionMode = InsertionMode.Replace;
}
<div class="span12">
    @using (Ajax.BeginForm("New", "Incident", options))
    { 
         @Html.AntiForgeryToken()
        <div class="row-fluid">
            <div class="span8 @AVAResource.Resource.Pull_Dir">
                <div class="span widget-container-span ">
                    <div class="widget-box ">
                        <div class="widget-header">
                            <h5>@AVAResource.Resource.IncidentDefine</h5>
                        </div>
                        <div class="widget-body">
                            <div class="widget-main ">
                                <link rel="stylesheet" href="~/Content/NewFolder1/jquery.Bootstrap-PersianDateTimePicker.css" />
                                <script src="~/Scripts/NewFolder1/calendar.js" type="text/javascript"></script>
                                <script src="~/Scripts/NewFolder1/jquery.Bootstrap-PersianDateTimePicker.js" type="text/javascript"></script>
                                <div class="row-fluid  ">
                                    <div class="span4 @AVAResource.Resource.Pull_Dir">
                                        <div class="">
                                            <label class="">@AVAResource.Resource.Automobile</label>
                                            <div class="">
                                                @Html.DropDownListFor(model => model.AutomobileID, Model.Automobiles, new { @class = "chzn-select" })
                                                @Html.ValidationMessageFor(model => model.Incident.Automobile, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="">
                                            <label class="">@AVAResource.Resource.Driver</label>
                                            <div class="">
                                                @Html.DropDownListFor(model => model.DriverID, Model.Drivers, new { @class = "chzn-select" })
                                                @Html.ValidationMessageFor(model => model.Incident.Driver, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span4 @AVAResource.Resource.Pull_Dir">
                                        <div class="">
                                            <label class="">@AVAResource.Resource.IncidentDate</label>
                                            <label class="">
                                                <span class="block input-icon @AVAResource.Resource.Input_icon ">
                                                    <input type="text" class="form-control" id="exampleInput3" value=@Model.PersianIncidentDate name="PersianIncidentDate" placeholder=@AVAResource.Resource.IncidentDate data-mddatetimepicker="true" data-placement="right" />
                                                    <i class="icon-calendar"></i>
                                                </span>
                                            </label>
                                        </div>
                                        <div class="">
                                            <label class="">@AVAResource.Resource.IncidentHour</label>
                                            <div class="">
                                                @Html.TextBoxFor(model => model.HourIncident, new { @class = "form-control", @style = "width:20px" })
                                                @AVAResource.Resource.IncidentMinute
                                                @Html.TextBoxFor(model => model.MinuteIncident, new { @class = "form-control", @style = "width:20px" })
                                                @Html.ValidationMessageFor(model => model.HourIncident, "", new { @class = "text-danger" })
                                                @Html.ValidationMessageFor(model => model.MinuteIncident, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    </div>
                                    <div class="row-fluid  ">
                                        <div class="">
                                            <div class="">
                                                <label class="">@AVAResource.Resource.IncidentDescription</label>
                                                @Html.TextAreaFor(model => model.Incident.Description, new { @class = "span8", @style = "height:90px" })
                                                @Html.ValidationMessageFor(model => model.Incident.Description, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="spacce6" />
            <div class="span4 @AVAResource.Resource.Pull_Dir">
                <div class="span widget-container-span ">
                    <div class="widget-box ">
                        <div class="widget-header">
                            <h5>صدمات وارده</h5>
                            <div class="widget-toolbar">
                                <a href="#">
                                    <i id="adddamage" class=" pull-left fa fa-plus bigger-130"></i>
                                </a>
                            </div>
                        </div>
                        <div class="widget-body">
                            <div class="widget-main ">
                                <ul id="damageEditor" style="list-style-type: none">
                                    @if (Model.Damages != null)
                                    {
                                        foreach (DAL.Damage damage in Model.Incident.Damages)
                                        {
                                            Html.RenderPartial("DamageEntryEditor", damage);
                                        }
                                    }
                                </ul>



                            </div>
                        </div>
                    </div>
                </div>
            </div>


        </div>
        <div class="row-fluid  ">
            <button class=" btn btn-small btn-primary">
                <i class="icon-edit "></i>
                @AVAResource.Resource.Save
            </button>
            <button class=" btn btn-small btn-purple" type="button" onclick="cancel()">
                <i class="icon-edit "></i>
                @AVAResource.Resource.Cancel
            </button>
        </div>
    }
</div>
<script>
    $(function () {
        $("#damageEditor").sortable();
        $("#adddamage").click(function () {
            $.get('/Incident/DamageEntryEditor', function (template) {
                $("#damageEditor").append(template);
            });
        });
    });

    function cancel() {
        var containerholder = $("#content");
        containerholder.html('');
    }
    $(".chzn-select").chosen();
    $(function () {
        $(document).ajaxComplete(function (event, request, settings) {
            $.validator.unobtrusive.parse(document);
        });
    });

    $(function () {
        var tag_input = $('#form-field-tags');
        if (!(/msie\s*(8|7|6)/.test(navigator.userAgent.toLowerCase())))
            tag_input.tag({ placeholder: tag_input.attr('placeholder') });
        else {
            tag_input.after('<textarea id="' + tag_input.attr('id') + '" name="' + tag_input.attr('name') + '" rows="3">' + tag_input.val() + '</textarea>').remove();
        }
    })

    function OnBegin() {
        Sppiner();
    }
    function OnComplete() {
        spinner.stop();
    }
    function OnFailure(arg) {
        spinner.stop();
    }
    function OnSuccess(result) {

        var data = '';
        if (result.success) {
            data = '<div class="alert alert-success"><button type="button" class="close" data-dismiss="alert">' +
           '<i class="icon-remove"></i></button><strong> <i class="icon-ok"></i></strong>' +
          result.description +
            '<br></div>'
        }
        else {
            data = '<div class="alert alert-warning"><button type="button" class="close" data-dismiss="alert">' +
          '<i class="icon-remove"></i></button><strong>  <i class="icon-ok"></i></strong>' +
           result.description +
          '<br></div>'
        }
        $('#content').html(data);
        $('#incidenttable').DataTable().ajax.reload();
        spinner.stop();
    }

    function generate(type, text) {
        var n = noty({
            text: text,
            type: type,
            dismissQueue: false,
            layout: 'topCenter',
            theme: 'defaultTheme',
        });
        return n;
    }
</script>
